"""registry_of_deaths added

Revision ID: 89a446a9dc4f
Revises: 9afc0721171c
Create Date: 2020-06-05 10:52:51.747738

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '89a446a9dc4f'
down_revision = '9afc0721171c'
branch_labels = ()
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('registry_of_deaths',
    sa.Column('id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('person_id', postgresql.UUID(as_uuid=True), nullable=False),
    sa.Column('date_of_death', sa.Date(), nullable=False),
    sa.Column('place_of_death', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('place_of_burial', postgresql.UUID(), nullable=True),
    sa.Column('status', sa.SmallInteger(), server_default='1', nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.ForeignKeyConstraint(['place_of_burial'], ['list_items.id'], ),
    sa.ForeignKeyConstraint(['place_of_death'], ['cities.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('persons', sa.Column('birth_place', postgresql.UUID(as_uuid=True), nullable=True))
    op.create_foreign_key(None, 'persons', 'cities', ['birth_place'], ['id'])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'persons', type_='foreignkey')
    op.drop_column('persons', 'birth_place')
    op.drop_table('registry_of_deaths')
    # ### end Alembic commands ###
